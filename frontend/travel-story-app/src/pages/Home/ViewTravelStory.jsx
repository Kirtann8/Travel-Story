import moment from "moment";
import React from "react";
import { MdAdd, MdDeleteOutline, MdUpdate, MdClose, MdDownload } from "react-icons/md";
import { GrMapLocation } from "react-icons/gr";

const ViewTravelStory = ({
  storyInfo,
  onClose,
  onEditClick,
  onDeleteClick,
}) => {
  const downloadPDF = async () => {
    const { jsPDF } = await import('jspdf');
    const doc = new jsPDF();
    
    // Header with gradient background
    doc.setFillColor(59, 130, 246); // Blue gradient
    doc.rect(0, 0, 210, 40, 'F');
    
    // App branding
    doc.setTextColor(255, 255, 255);
    doc.setFontSize(16);
    doc.text('TRAVEL STORIES', 20, 15);
    doc.setFontSize(10);
    doc.text('Your Journey, Your Story', 20, 25);
    
    // Title with decorative elements
    doc.setTextColor(0, 0, 0);
    doc.setFontSize(24);
    doc.text(storyInfo.title, 20, 60);
    
    // Decorative line
    doc.setDrawColor(59, 130, 246);
    doc.setLineWidth(2);
    doc.line(20, 65, 190, 65);
    
    // Date and location with labels
    doc.setFontSize(12);
    doc.setTextColor(100, 100, 100);
    doc.text(`DATE: ${moment(storyInfo.visitedDate).format("Do MMM YYYY")}`, 20, 80);
    doc.text(`LOCATION: ${storyInfo.visitedLocation.join(", ")}`, 20, 90);
    
    let currentY = 100;
    
    // Add image first if available
    if (storyInfo.imageUrl) {
      try {
        const img = new Image();
        img.crossOrigin = 'anonymous';
        img.onload = () => {
          const canvas = document.createElement('canvas');
          const ctx = canvas.getContext('2d');
          canvas.width = img.width;
          canvas.height = img.height;
          ctx.drawImage(img, 0, 0);
          const imgData = canvas.toDataURL('image/jpeg');
          
          // Image shadow
          doc.setFillColor(200, 200, 200);
          doc.rect(22, currentY + 2, 166, 80, 'F');
          // Image border
          doc.setDrawColor(59, 130, 246);
          doc.setLineWidth(1);
          doc.rect(20, currentY, 166, 80);
          // Image
          doc.addImage(imgData, 'JPEG', 21, currentY + 1, 164, 78);
          
          // Story content after image
          currentY += 90;
          addStoryText(doc, currentY);
        };
        img.src = storyInfo.imageUrl;
      } catch (error) {
        addStoryText(doc, currentY);
      }
    } else {
      addStoryText(doc, currentY);
    }
    
    function addStoryText(doc, startY) {
      doc.setFontSize(11);
      doc.setTextColor(0, 0, 0);
      const splitText = doc.splitTextToSize(storyInfo.story, 170);
      
      let textY = startY;
      for (let i = 0; i < splitText.length; i++) {
        if (textY > 270) {
          doc.addPage();
          textY = 20;
        }
        doc.text(splitText[i], 20, textY);
        textY += 5;
      }
      
      // Footer
      if (textY > 270) {
        doc.addPage();
        textY = 20;
      }
      doc.setFontSize(8);
      doc.setTextColor(150, 150, 150);
      doc.text('Generated by Travel Stories App', 20, 280);
      doc.text(`Created: ${new Date().toLocaleDateString()}`, 150, 280);
      
      doc.save(`${storyInfo.title.replace(/\s+/g, '_')}_TravelStory.pdf`);
    }
  };
  return (
    <div className="relative">
      <div className="flex items-center justify-end">
        <div>
          <div className="flex items-center gap-3 bg-cyan-50/50 p-2 rounded-l-lg">
            <button className="btn-small" onClick={onEditClick}>
              <MdUpdate className="text-lg" /> UPDATE STORY
            </button>

            <button className="btn-small bg-gradient-to-r from-blue-500 to-cyan-500 text-white hover:from-blue-600 hover:to-cyan-600" onClick={downloadPDF}>
              <MdDownload className="text-lg" /> PDF
            </button>

            <button className="btn-small btn-delete" onClick={onDeleteClick}>
              <MdDeleteOutline className="text-lg" /> Delete
            </button>

            <button className="" onClick={onClose}>
              <MdClose className="text-xl text-slate-400" />
            </button>
          </div>
        </div>
      </div>

      <div>
        <div className="flex-1 flex flex-col gap-2 py-4">
          <h1 className="text-2xl text-slate-950">
            {storyInfo && storyInfo.title}
          </h1>

          <div className="flex items-center justify-between gap-3">
            <span className="text-xs text-slate-500">
              {storyInfo && moment(storyInfo.visitedDate).format("Do MMM YYYY")}
            </span>

            <div className="inline-flex items-center gap-2 text-[13px] text-cyan-600 bg-cyan-200/40 rounded px-2 py-1">
              <GrMapLocation className="text-sm" />
              {storyInfo &&
                storyInfo.visitedLocation.map((item, index) =>
                  storyInfo.visitedLocation.length == index + 1
                    ? `${item}`
                    : `${item}, `
                )}
            </div>
          </div>
        </div>

        <img
          src={storyInfo && storyInfo.imageUrl}
          alt="Selected"
          className="w-full h-[300px] object-cover rounded-lg"
        />

        <div className="mt-4">
          <p className="text-sm text-slate-950 leading-6 text-justify whitespace-pre-line">{storyInfo.story}</p>
        </div>
      </div>
    </div>
  );
};

export default ViewTravelStory;
